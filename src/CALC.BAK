#include <iostream.h>
#include <conio.h>
#include <math.h>
#include <stdlib.h> 
#define new_cal 1
#define old_cal 0

class stand_calc
{
public:

static double addition(double,double);
static double subtract(double,double);
static double multiplication(double,double);
static double division(double,double*);
static double modulus(double *,double*);
};

class  scien_calc
{
public:

static double squre(double);
static double cube(double);
static double power(double,double);
//static double sq_root(double);
static long int fact(double);
static double sin_func(double);
static double cos_func(double);
static double tan_func(double);
};


double stand_calc::addition(double a, double b)
{
return(a+b);
}

double stand_calc::subtract(double a, double b)
{
return(a-b);
}

double stand_calc::multiplication(double a, double b)
{
return(a*b);
}

double stand_calc::division(double a, double *b)
{
while(*b==0)
{
cout<<"\n cannot divide by zero";
cout<<"\n enter second number again";
cin>>*b;
}
return(a/(*b));
}
double stand_calc::modulus(double *a, double *b)
{
while(*b==0)
{
cout<<"\n cannot divide by zero";
cout<<"\n enter second number again";
cin>>*b;
}
int x=(int)*a;
int y=(int)*b;
if(*a-x>0||*b-y>0)
cout<<"\n converting decimal number into an integer to perform modulus";
*a=x;
*b=y;
return(x%y);
} 

double scien_calc::squre(double x)
{
return(pow(x,2));
}

double scien_calc::cube(double x)
{
return(pow(x,3));
}
double scien_calc::power(double x, double y)
{
return(pow(x,y));
}
long int scien_calc::fact(double x)
{
int n=(int)x;
long int f=1;
while(n>1)
{
f*=n;
n--;
}
return f;
}
double scien_calc::sin_func(double x)
{
return(sin(x));
}
double scien_calc::cos_func(double x)
{
return(cos(x));
}
double scien_calc::tan_func(double x)
{
return(tan(x));
}
void main()
{
double num1,num2,num3,temp;
int choice1=0, choice2,flag;
do
{
clrscr();

cout<<"*************types of calculator********";
cout<<"\n1 standard calculator\n 2\t scientific calculator\n 3\t quit";
cout<<"\n choose the type of caculator:";
cin>>choice1;
flag=new_cal;
switch(choice1)
{
case 1:
do
{
clrscr();
cout<<"*************standard  calculator******";
cout<<"\n1\tAddition\n2\tsubtract\n3\tmultiplication\n4\tdivision\n5\tmodulus\n6\treturn to previous menu\n7\tquit";
   if(flag==old_cal)
cout<<"\n8\tclear memory";
cout<<"\n choose the type of calculation:";
cin>>choice2;
switch(choice2)
{
case 1:

if (flag==new_cal)
{
cout<<"enter first number:";
cin>>num1;
}
else
{
num1=temp;
cout<<"\n first number is "<<num1<<endl;
}
cout<<"enter second number :";
cin>>num2;
num3=stand_calc::addition(num1,num2);
cout<<"\n addition of"<<num1<<"and "<<num2<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case2:

if(flag==new_cal)
{
cout<<"enter first number:";
cin>>num1;
}
else
{
num1=temp;
cout<<"\nfirst number is"<<num1<<endl;
}
cout<<" enter second number";
cin>>num2; 
num3=stand_calc::subtract(num1,num2);
cout<<"\n subtraction of"<<num2<<"from "<<num1<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case3:

if(flag==new_cal)
{
cout<<"enter first number:";
cin>>num1;
}
else
{
num1=temp;
cout<<"\nfirst number is"<<num1<<endl;
}
cout<<" enter second number";
cin>>num2;

num3=stand_calc::multiplication(num1,num2);
cout<<"\n multiplication of"<<num1<<"and "<<num2<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 4:

if(flag==new_cal)
{
cout<<"enter first number:";
cin>>num1;
}
else
{
num1=temp;
cout<<"\nfirst number is"<<num1<<endl;
}
cout<<" enter second number";
cin>>num2;
num3=stand_calc::division(num1,&num2);
cout<<"\n divison of"<<num1<<" by "<<num2<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 5:

if(flag==new_cal)
{
cout<<"enter first number:";
cin>>num1;
}
else
{
num1=temp;
cout<<"\nfirst number is"<<num1<<endl;
}
cout<<" enter second number";
cin>>num2;

 
num3=stand_calc::modulus(&num1,&num2);
cout<<"\n modulus of"<<num1<<"by "<<num2<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 6:

cout<<"\n returning to previous menu";
getch();
break;
case 7:

cout<<"\n quitting....";
getch();
exit(0);
case 8:

if(flag==new_cal)
{
cout<<"\n invalid choice";
cout<<"\n press any key to continue";
getch();
}
else
{
temp=0;
flag=new_cal;
}
break;
default:
cout<<"\ninvalid choice";
cout<<"\n press any key to continue";
getch();
break;
}
}
while(choice2!=6);
break;
case 2:
do
{
clrscr();
cout<<"scientific calculator";
cout<<"\n1\t square \n2\t cube\n3\tpower \n4\tfactorial\n5\tsin\n6\tcos\n7\ttan\n8\treturn to previous menu\n9\tquit";
if(flag==old_cal)
cout<<"\n10\tclear memory";
cout<<"\n choose the type of calculation:";
cin>>choice2;
switch(choice2)
{
case 1:

if (flag==new_cal)
{
cout<<"enter first number:";
cin>>num1;
}
else
{
num1=temp;
cout<<"\n first number is "<<num1<<endl;
}
num3=scien_calc::squre(num1);
cout<<"\nsquare of "<<num1<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 2:
if(flag==new_cal)
{
cout<<"enter first number to find cube: ";
cin>>num1;
}
else
{
num1=temp;
cout<<"\n first number is "<<num1<<endl;
}

num3=scien_calc::cube(num1);
cout<<"\ncube of "<<num1<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 3:
if(flag==new_cal)
{
cout<<"enter first number for base to find power: ";
cin>>num1;
}
else
{
num1=temp;
cout<<"\n first number is "<<num1<<endl;
}
cout<<"enter second number for power to find power:";
cin>>num2;
num3=scien_calc::power(num1,num2);
cout<<"\n"<<num1<<" to the power"<<num2<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 4:
if(flag==new_cal)
{
cout<<"enter first number to find factorial: ";
cin>>num1;
}
else
{
num1=temp;
cout<<"\n first number is factorial is "<<num1<<endl;
}
long int num4=scien_calc::fact(num1);
cout<<"\nfactorial of"<<num1<<" is "<<num4;
getch();
temp=num4;
flag=old_cal;
break;
case 5:
if(flag==new_cal)
{
cout<<"enter first number to find sin value: ";
cin>>num1;
}
else
{
num1=temp;
cout<<"\n number for sin value is "<<num1<<endl;
}
num3=scien_calc::sin_func(num1);
cout<<"\nsin value of"<<num1<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 6:
if(flag==new_cal)
{
cout<<"enter first number to find cos value: ";
cin>>num1;
}
else
{
num1=temp;
cout<<"\n number for cos value is "<<num1<<endl;
}
num3=scien_calc::cos_func(num1);
cout<<"\ncos value of"<<num1<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 7:
if(flag==new_cal)
{
cout<<"enter first number to find tan value: ";
cin>>num1;
}
else
{
num1=temp;
cout<<"\n number for cos value is "<<num1<<endl;
}
num3=scien_calc::tan_func(num1);
cout<<"\ntan value of"<<num1<<" is "<<num3;
getch();
temp=num3;
flag=old_cal;
break;
case 8:
cout<<"returning to previous menu";
getch();
break;
case 9:
cout<<"quit";
getch();
exit(0);
case 10:
if(flag==new_cal)
{
cout<<"\n invalid choice";
 getch();
}
else
{
temp=0;
flag=new_cal;
}
break;
default:
cout<<"\n invalid choice";
getch();
break;
}
}while(choice2!=8);
break;
case 3:
cout<<"quit";
getch();
break;
default:
cout<<"\n invalid choice";
getch();
break;
}
}while(choice1!=3);
}


